#!/bin/bash

function print {
    if [ $? -eq 0 ]
    then
        echo -e $1 " \e[1;32mOK\e[0m."
    else 
        echo -e $1 " \e[1;31mNOK\e[0m."
    fi
}

function clean {
    rm -f config.last SC
    cd ../old/
    rm -f  a.out config.last
    cd ../..
}

cd ../scOOP/

rm -f CMakeCache.txt
rm -rf CMakeFiles/

cmake . > /dev/null

make -j4 > /dev/null
mv SC ../Tests/

cd ../Tests/

echo ""
echo "Building comparison version..."
gcc sc35.c -O3 -march=native -msse2 -mfpmath=sse -lm

echo ""
echo "Building comparison version 2..."
cd scOOP/

rm -f CMakeCache.txt
rm -rf CMakeFiles/

cmake . > /dev/null

make -j4 > /dev/null
mv SC ../SC2
cd ..

echo ""
echo "testing..."

#
# TEST normal
#
cp SC normal/new/
cp a.out normal/old/
cd normal/old
echo 'OLD'
time ./a.out >/dev/null
cd ../new/
echo 'NEW'
time ./SC > /dev/null
diff config.last ../old/config.last > /dev/null
print "1) Basic Test, TCPSC"
echo ""
clean

#
# TEST normal with energy matrix, pairlist_update 1000
#
cp SC normal_w_EnergyMatrix/new/
cp a.out normal_w_EnergyMatrix/old/
cd normal_w_EnergyMatrix/old
echo 'OLD'
time ./a.out >/dev/null
cd ../new/
echo 'NEW'
time ./SC > /dev/null
diff config.last ../old/config.last > /dev/null
print "1) Basic Test with energy matrix and pairlist(1000), TCPSC"
echo ""
clean

#
# TEST grandCanon with energy matrix, pairlist_update 0
#
cp SC GrandCanon/NO_pairlist/
cp SC2 GrandCanon/NO_pairlist/
cd GrandCanon/NO_pairlist/
echo 'Version without Energymatrix'
time ./SC2 >/dev/null
mv config.last config2.last
echo 'NEW'
time ./SC > /dev/null
diff config.last config2.last > /dev/null
print "1) GrandCanon Test with energy matrix and pairlist(0), TCPSC"
echo ""
rm -f SC2
clean


#
# TEST grandCanon with energy matrix, pairlist_update 10
#
cp SC GrandCanon/pairlist/
cp SC2 GrandCanon/pairlist/
cd GrandCanon/pairlist/
echo 'Version without Energymatrix'
time ./SC2 >/dev/null
mv config.last config2.last
echo 'NEW'
time ./SC > /dev/null
diff config.last config2.last > /dev/null
print "1) GrandCanon Test with energy matrix and pairlist(1000), TCPSC"
echo ""
rm -f SC2
clean

#
# TEST chain
#
cp SC chain/new2/
cp a.out chain/old/
cd chain/old
echo 'OLD'
time ./a.out > /dev/null
cd ../new2/
echo 'NEW'
time ./SC > /dev/null
diff config.last ../old/config.last > /dev/null
print "2) Chain Test, 5 TCPSC"
echo ""
clean

#
# TEST chain with energy matrix and pairlist(1000)
#
cp SC chain_w_EnergyMatrix/new2/
cp a.out chain_w_EnergyMatrix/old/
cd chain_w_EnergyMatrix/old
echo 'OLD'
time ./a.out > /dev/null
cd ../new2/
echo 'NEW'
time ./SC > /dev/null
diff config.last ../old/config.last > /dev/null
print "2) Chain Test with energy matrix and pairlist(1000), 5 TCPSC"
echo ""
clean


#
# TEST mempore
#
cp SC mempore/new/
cp a.out mempore/old/
cd mempore/old
echo 'OLD'
time ./a.out > /dev/null
cd ../new/
echo 'NEW'
time ./SC > /dev/null
diff config.last ../old/config.last > /dev/null
print "3) Mempore Test, pressure xy, wanglandau pore, chainmove, SPN-SPA-SPA"
clean

#
# TEST wallfibril
#
cp SC wallfibril/new/
cp a.out wallfibril/old/
cd wallfibril/old
echo 'OLD'
time ./a.out > /dev/null
cd ../new/
echo 'NEW'
time ./SC > /dev/null
diff config.last ../old/config.last > /dev/null
print "4) WallFibril Test, external wall, switchmove, CPSC"
clean

#
# TEST pscthrough
#
cp SC pscthrough/new/
cp a.out pscthrough/old/
cd pscthrough/old
echo 'OLD'
time ./a.out > /dev/null
cd ../new/
echo 'OLD'
time ./SC > /dev/null
diff config.last ../old/config.last > /dev/null
print "5) PSC-through Test, pressure xy, wanglandau z-direct, chainmove, SPN-SPA-SPA, CPSC"
clean

rm -f a.out SC

echo ""
echo -e "\e[0mdone"
