/** @file doc*/

/*! \mainpage SC a metropolis monte carlo program

Some general info.

This manual is divided in the following sections:
- \subpage Intro
- \subpage Usage
- \subpage Scripts
- \subpage Versions
- \subpage theory "Theory behind energy functions"
*/

//-----------------------------------------------------------

/*! \page Intro Introduction
C++ code for Monte Carlo simulations of patchy spherocylinders

SC 4.0
==

C++ code for Monte Carlo simulations of patchy spherocylinders

Compiling
=========

in scOOP/ directory:

    $ module add cmake
    $ cmake .
    $ make -j number_of_cores

executable SC will be created.

Parallel tempering or Multiple Walker Wang-Landau:
Enable MPI, compile with:

    $ module add mpich
    $ cmake . -DENABLE_MPI=ON -DENABLE_OPENMP=OFF
    $ make -j number_of_cores
    $ mpirun -np number_of_threads SC

Generating documentation:

    $ doxygen

Testing:

    $ cd Tests/
    $ ./test
    $ cd Interactions_tests/
    $ ./test.sh

--------------------------------------------------------------------------------

Extensive pair interaction comparisons to past versions
(namely SC version used in doi 10.1063/1.4933229)

Comprehensive tests:
  folders : SC_PSC_MEMBRANE_WANG and System_averages_tests

Use scripts/movie-scripts/python 2.x/sc35-movie.py for vmd openable movie
Use scripts/movie-scripts/python 2.x/sc35-movie.py -g 1 for grandCanonical


*/

//-----------------------------------------------------------

/*! \page theory Theory behind energy functions
The following is an excerpt from a topology file and the energy function which these parameters.

@include u

 - SPA stands for attractive sphere,
 - EPSILON defines the strength of interaction
 - SIGMA sets the diameter of the spheres
 - ATTRACTION DIST sets the end of the potential at ATTRACTION_DIST + ATTRACTION_SWITCH
 - ATTRACTION SWITCH is the distance at which the minimum of the potential is reach

\image html U.png "Example of energy function for attractive spheres"
*/

//-----------------------------------------------------------

/*! \page Usage Usage
- \subpage Config
- \subpage Types
- \subpage Topo
- \subpage Options
- \subpage Example_muVT
- \subpage Example_MultipleWalker
- \subpage Example_ReplicaExchange
*/

/*! \page Config Config.init format
- Line 1: three numbers representing simulation box dimensions
- From line 2: 11 variables required to define a particle:
- [x, y, z]  [dirX, dirY, dirZ]  [patchX, patchY, patchZ]  [switched]  optional:[moltype]
  ==============================================================================

- meaning:
- [x, y, z] = position vector
- [dirX, dirY, dirZ] = orientation of particle, unit vector
- [patchX, patchY, patchZ] = orientation of patch, unit vector perpendicular to dir vector
- [switched] = 0 or 1 indicating switched particle
- [moltype] = molecular type, required for the correct visualization of grand canonical simulation

Example file:
@include config.init
- NOTE: The older SC program required only 10 variables and this is still suported, the 11th variable is only required for the correct visualization of grand canonical simulation
- NOTE: You are not required to specify the molType(11th variable), the information about molecular types is loaded from top.init
*/

/*! \page Types [Types] parametrization
\section SPN SPN sphere non-attractive, example topology:
@include top.spn

\section SPA SPA spherocylinder isotropicaly attractive, example topology:
@include top.spa

\section SCN SCN spherocylinder non-attractive - BUGGED, DONT USE

\section SCA SCA spherocylinder isotropicaly attractive - BUGGED, DONT USE

\section PSC PSC spherocylinder with patchy attraction and CPSC spherocylinder with cylindrical patchy attraction
@include top.psc

\section CHPSC CHPSC chiral psc and CHCPSC chiral cpsc
@include top.chpsc

\section TPSC TPSC spherocylinder with two patches and TCPSC spherocylinder with two cylindrical patches
@include top.tpsc

\section TCHPSC TCHPSC chiral tpsc and TCHCPSC chiral tcpsc
@include top.tchpsc
*/

/*! \page Topo Topology file format
- Topology file MUST BE NAMED "top.init"
                              ==========
- In a GrandCanonical simulation top.last will be produced when simulation finishes
@include top.init
*/

/*! \page Options Options file format
- Options file MUST BE NAMED "options"
                             =========
@include options
*/

/*! \page Example_muVT Grandcanonical ensemble example
- Grandcanonical ensemble in MoveCreator::muVTMove()
  - insertion and deletion moves
  - set activity in topology and nGrandCanon in options
  - activity is set in mols per liter [mol/l]
  - example topology:
@include topGrand.init
  - example options:
@include optionsGrand
*/

/*! \page Example_MultipleWalker Wang-Landau Multiple walker example

Multiple Walker WangLandau Simulation in NpT ensemble example
=============================================================

NPT ensemble example
- define [ptype], [press], [shave] and [edge_mx] in options
- NPT ensemble in MoveCreator::pressureMove()

Multiple Walker Wang-Landau
- define [wlm] and [wlmtype] in options
- create wl.dat file

Compile with MPI support to activate Multiple Walker WangLandau

Undefined behavior will occur if Multiple Walker used with Parallel Tempering

Options
=======
@include WL_NPT_options

wl.dat
======
- Line 1: [Value of Alpha]
- Rest: [Colective variable 1] [Colective variable 2] [Free energy - history dependent] [Histogram dependent of current alpha - can be omited]
@include wl.dat

top.init
========
@include WLtop.init
*/

/*! \page Example_ReplicaExchange Parallel tempering example

*/

/*! \page Scripts Scripts
Submitting a job to batch system
================================
- scripts/precycle_sc for using Infinity (Torque submitting system addon)

Visualize trajectory with vmd
=============================
- /scripts/movie-scripts/python 2.x/sc35-movie.py
- /scripts/movie-scripts/python 2.x/usefulmath.py
*/

//-----------------------------------------------------------

/*! \page Versions Versions Log

\section ver40 Version 4.0
 - Energy matrix acceleration scheme implemented
 - Multiple Walker Wang-Landau added
 - Grandcanonical ensemble added MoveCreator::muVTMove()
 - Cluster move added MoveCreator::clusterMove() and MoveCreator::clusterMoveGeom()
 - conversion to c++ changes:
   - unnecessary declarations removed
   - code sorted into several files based on functionality
   - Mac and Linux "getline.h" added to the implementation explicitly for multiplatform support
   - Boolean macros abolished
   - struct particles converted to class Particle
     - simple functions acting on Particle data moved here
   - static array[MAXN] of particles converted to ParticleVector
     - functionality for GrandCanonical ensemble added
   - struct interacts converted to class PairE
     - energy functions moved here
     - intfce (array of interaction functions) also here
     - called by TotalE
   - class TotalEnergyCalculator created
     - several functions added besides the original calc_energy() function
   - class ExternalEnergyCalculator created
   - struct chainparams converted to class MoleculeParams
   - struct meshs converted to class Mesh
     - functions acting on Mesh data moved here
   - struct wls converted to class WangLandau
     - functions acting on WangLandau data moved here
   - struct pairs converted to class Neighbors
   - struct pairlist abolished
   - struct exters converted to class Exters
     - constructor for "empty" state added
   - struct ia_param converted to class Ia_param
     - constructor for "empty" state added
   - struct topo converted to Topo
     - constructor for "empty" state added
     - functions acting on Topo data moved here
   - struct sim converted to Sim
     - constructor for "empty" state added
     - functions acting on Sim data moved here
   - struct conf converted to Conf
     - functions acting on Conf data moved here


\section ver35 Version 3.5
   - linear bond at spherocylinders, where second spherocilinder is harmonicaly
     attached to a point that is in distance of bondlength from the first spherocylinder
     and it follows the direction of spherocylinder
   - bonded particles belong to the same cluster
   - print energy at statistical reports
   - have particles of different lengths
   - interaction scaling back to v1+v2 (no addition of 1.0) - more physical

\section ver34 Version 3.4
    - New handling of the option file
    - reaction coordinate radius around z axis for a pore calculations
    - reaction coordinate as number of particles in contact (defined by distance of CMs)
    - 2D Wang-Landau method
    - New Wang-Landau coordinate - radius pore in vesicle around begining of xy plane
    - New models TPSC, TCPSC, TCHPSC, TCHCPSC- models with two patches
      note that switch function on sides of patch are linear in cos angle not in angle
      as a results two patches with overlaping sides do not compensate easily to a flat profile
    - FIX chirality was doubled (angle twice as large)
    - Added posibility of exluded interactions [EXCLUDE] in topology file
    - MPI replica exchange with different temperatures and pressure (paraltemp paralpress)
      input configuration is #{number of process}config.init, if it does not exist config.init is used
      each replica is with different random seed = seed+mpirank
    - config.init can look like movie snapshot
    - MPI exchange with Wang-Landau
    - added angular interaction between neighboring spherocylinders (in chain)
      angle1 is angle between sc directions and angle2 ins angle between the patches

\section ver33  Version 3.3
  - external potantial can be added as a part of topology (it can be hard or attractive wall)


\section ver32 Changes made by Noah S. Bieler and Robert Vacha: New version 3.2

 * - The length has now to be specified in the topology file, but they are not
 * allowed to differ from each other. The option file shall no longer contain
 * a length option.
 * - The particles can now switch their type based on the chemical potential
 * delta_mu (= energy difference from state 2 to state 1).
 * - For that a new option was introduced: Average attempts per sweep to switch
 * a type.
 * - A lot of variables are now combined in either topo, sim or conf. The rule
 *   should be:
 *   - topo: Everything that belongs to the topology and that should not change
 *           during the game.
 *   - sim:  Options and stuff, that has to do with the simulation. (Maybe the
 *           current target and so should be saved in there as well)
 *   - conf: What changes every step concerning the particles and the box or
 *           in other words: what has been read from conf.init
 * - added a cluster determing routine => sim->clusterlist + sim->clusters
 * - added macros for TRUE and FALSE
 * - Added Option for the random seed
 * - Basic Neighbour list implemented
 * - New types: chiral CPSC (CHCPSC) and chiral PSC (CHPSC) and their interactions


 \section ver31 Patchy Spherocylinder Version 3.1

  - Wang-Landau method of free energy calculations
    - It is set in options file as:
      - O = none,
      - 1 = z-distance of 1st paticle from system CM
      - 2 = hole in xyplane of SCA = membrane hole
  - It reads a file wl.dat and write wl-new at the end. There is value of alpha at the first line and then
  there are three columns:
    - 1- order parameter,
    - 2- weights,
    - 3- histogram
  - Interaction of spherocylinders is scaled based on the volume of attractive patch, the unit of one
  is that two spheres of diameter sigma =1.0 are attracting each other by 1.0. Using this in interaction
  among lipids and spherocylinders should be consistent.
  - Start up configuration "config.init" file has a box size at the first line now.
  (I tested performance: compilation with optimization -O2 speed up 10%
  rest has negligible effect including usage of static arrays instead of dynamic
  most of the time consumes paire function.
  6,519,638,177  :simulate
  6,492,411,300  :energyone
  5,705,685,593  :paire
  542,561,887  :bondenergy
  489,463,361  :eattractive11
  450,443,970  :image
  115,126,519  :erepulsive



 \section ver30  Patchy Spherocylinder Version 3.0

 - Beads were added to the particle list.
 - bead(10) - repulsive
 - bead(11) - isotropocally attractive
 - It is necessary to provide also a topology file (top.init)
 - Particles are placed in chains according to the topology order including connections
 - Particle arryas are allocated dynamicly on heap now
 - dispacement and rotation are optimized for highest RMSD performace
 - NPT ensemble with isotropic and anisotropic couplings, in pressure moves all
   particles are rescaled with their center (chains are not rescaled with CM)
    -0 - anisotropic coupling,
    -1 - isotropic coupling,
    -2 - isotropic in xy z=const
 - bead types and their interactions
 - repulsive(10) purely repulsive shpere with WCA potential on closest distance
 - parameters: Patch repulsion sigma - defined where repulsion reaches zero
   isotropic(11) - isotropic cos^2 potential is acting isotropicaly dependent only on
   closest distance between obejcts.
 - Parameters: distance of attractivity (should be at least
   sigma*2^(1/6)) defines how far is attraction constant -e. After this distance
  follows switch length on which attraction goes to zero as cos^2.
 - Rest as repulsive model.

\section ver2 Patchy Spherocylinder Version 2.0

 - It is possible to make chains of spherocylinders that are connected through
hemispherical caps by harmonic bond.
 - There are two parameters eq distance and
strength of harmonic spring, note that units are in 1 kT/e, the MC strength of bond
is changing with parameter temperature..

\section ver1 Patchy Spherocylinder Version 1

 - Includes diffferent types of possible interactions:
   - repulsive(0) - purely repulsive spherocylinder with WCA potential on closest distance.
     - parameters: Patch repulsion sigma - defined where repulsion reaches zero.
   - isotropic(1) - isotropic cos^2 potential is acting isotropicaly dependent only on
     closest distance between spherocylinders.
     - Parameters: distance of patch, Interaction distance of patch (should be at least
       sigma*2^(1/6)) defines how far is attraction constant -e. After this distance
       follows Switch length on which attraction goes to zero as cos^2.
   - Rest as repulsive model.

 - patchy(2)
   - Attractive potential in limited to an angular wedge on spherocylinder.
   - Patch goes all the way through, making also hemispherical caps on end attractive.
     - Parameters:Anglular part has a parameter defining it size "Angular size of patch
       (degrees)" and witdh of switch function "Angular switch off of patch (degrees)" on which
       attraction reaches zero
     - it is a linear function
     - Rest as isotropic model.

 - cylindrical(3)
   - Attractive potential in limited to an angular wedge on cylindrical part
     of spherocylinders. The hemispherical caps on ends are repulsive.
   - Rest as patchy model.

Note particles are inside numbered from 0, there is prealocated size of particles MAXN
because in future there can be grand canonical ensamble and number of particles may vary

Follows mc of hard wall spherocylinder version 7 by Mark Miller -description below


\section ver0 Version 1

Performs basic constant volume MC simulation of hard spherocylinders with rigid
cuboidal boundary conditions.

Run parameters are read in from the file "options".  The template for this file
appears at the end of the code.  The values must be inserted before the colons.

The initial configuration is read from the file "config.init".  The first line contain size
of box The format for the file is nine columns: three for the positions and three for the
direction vector and three for direction of pathc.  The direction vectors are normalised
after being read in.  The configuration is checked for particle overlaps.

The unit of length is taken as the spherocylinder diameter.  Hence the ratio
L/D is equal to the length of the cylinder.

Order parameters for nematic and smectic order are evaluated.  The nematic order
parameter is related to the coefficient of the quadratic term in the Legendre
expansion of the orientational distribution function.  Any smectic order is
assumed to be directed along the z axis, and is detected by the coefficients
of the Fourier expansion of the position distribution function.

MM 12.vii.01


\section v2 Version 2

The aspect ratio of the box may now fluctuate, keeping the volume constant.
Two new parameters are required in the options file to specify the average number
of attempted shape changes per sweep, and the initial maximum trial change in
a box dimension.

Shape changes are made by picking one of the three box lengths at random,
making a random change, evenly distributed between plus and minus a finite
interval, choosing a second direction and doing the same, then determining
the new length in the remaining direction from the condition of constant
volume.

The step-size equilibration period is now split into three parts: displacement,
rotation, and shape change.

The most important change to the code is that the particle coordinates are
now stored as fractions of the box dimensions.  However, input and output
configurations are still communicated in units of the cylinder diameter, D=1.

Note that the displacement maximum step size is now specified as a fraction of
the box length, not as an absolute distance.

MM 18.vii.01


\section v3 Version 3

Constant pressure MC.  The volume may fluctuate.  Volume changes are attempted
by altering just one box length at a time, chosen at random.  The running
average of the density is calculated and reported.

MM 24.vii.01


\section v7 Version 7

The composite translation-plus-rotation moves have been split into separate
move types, each of which is attempted with equal probability.  This enables
acceptance ratios to be accumulated separately for these degrees of freedom, so
that maximum step sizes can be adjusted more sensibly.

A few other things have been tidied up, such as defining structures for the
book-keeping of statistics and acceptance ratios.

MM 9.v.02
*/

//-----------------------------------------------------------

